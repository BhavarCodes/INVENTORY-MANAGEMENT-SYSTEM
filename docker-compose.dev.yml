version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: inventory-mongodb-dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: grocery_inventory
    volumes:
      - mongodb_dev_data:/data/db
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - inventory-dev-network

  # Backend API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: inventory-backend-dev
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/grocery_inventory?authSource=admin
      JWT_SECRET: dev_jwt_secret_key
      JWT_EXPIRE: 7d
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USER: your_email@gmail.com
      EMAIL_PASS: your_app_password
      VENDOR_EMAIL: vendor@example.com
      LOW_STOCK_THRESHOLD: 10
    depends_on:
      - mongodb
    networks:
      - inventory-dev-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  # Frontend (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: inventory-frontend-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - inventory-dev-network
    command: npm start

volumes:
  mongodb_dev_data:

networks:
  inventory-dev-network:
    driver: bridge
